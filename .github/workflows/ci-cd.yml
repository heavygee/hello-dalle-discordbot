name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Get version from version_info.json
        id: get_version
        run: |
          version=$(jq -r 'keys | .[0]' version_info.json)
          echo "Version: $version"
          echo "::set-output name=version::$version"

      - name: Create GitHub tag
        id: create_tag
        run: |
          version=${{ steps.get_version.outputs.version }}
          git tag "v$version"
          git push origin "v$version"

      - name: Create GitHub release
        id: create_release
        run: |
          version=${{ steps.get_version.outputs.version }}
          description=$(jq -r --arg version "$version" '.[$version].description' version_info.json)
          gh release create "v$version" --title "v$version" --notes "$description"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Delete tag if release creation fails
        if: failure() && steps.create_release.outcome == 'failure'
        run: |
          version=${{ steps.get_version.outputs.version }}
          git push origin :refs/tags/v$version
          echo "GitHub release creation failed. Deleted tag v$version."

      - name: Docker build and push
        if: success() && steps.create_release.outcome == 'success'
        run: |
          version=${{ steps.get_version.outputs.version }}
          docker build -t heavygee/hello-dalle-discordbot:latest .
          docker tag heavygee/hello-dalle-discordbot:latest heavygee/hello-dalle-discordbot:$version
          echo "Docker images tagged with $version and latest"
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push heavygee/hello-dalle-discordbot:latest
          docker push heavygee/hello-dalle-discordbot:$version

      - name: Log docker push success
        if: success() && steps.create_release.outcome == 'success'
        run: echo "Docker push succeeded."

      - name: Log docker push failure
        if: failure() && steps.create_release.outcome == 'success'
        run: echo "Docker push failed. Manual intervention may be needed."
