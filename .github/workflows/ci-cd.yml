name: build-and-deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18

    - name: Install dependencies
      run: npm install

    - name: Run tests
      env:
        DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: npm test

    - name: Get latest version from version_info.json
      id: version
      run: |
        version=$(jq -r 'keys | map(.) | sort_by(.) | last' version_info.json)
        echo "Version: $version"
        echo "VERSION=$version" >> $GITHUB_ENV

    - name: Create Git tag
      run: |
        version=${{ env.VERSION }}
        git tag "v$version"
        git push origin "v$version"

    - name: Create GitHub Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        version=${{ env.VERSION }}
        description=$(jq -r --arg version "$version" '.[$version].description' version_info.json)
        gh release create "v$version" --title "v$version" --notes "$description"
      continue-on-error: true  # You can set this to false if you want the job to fail on release issues

    - name: Delete Git tag if release fails
      if: failure() && steps.version.outputs.VERSION != ''
      run: |
        version=${{ env.VERSION }}
        echo "Deleting tag v$version due to release failure"
        git tag -d "v$version" || echo "Tag not found, nothing to delete"
        git push origin --delete "v$version" || echo "Failed to delete remote tag"

    - name: Build and push Docker image
      if: success()  # Push Docker images only if release creation succeeds
      run: |
        version=${{ env.VERSION }}
        docker build -t heavygee/hello-dalle-discordbot:latest .
        docker tag heavygee/hello-dalle-discordbot:latest heavygee/hello-dalle-discordbot:$version
        echo "Docker images tagged with $version and latest"
        docker login -u heavygee -p ${{ secrets.DOCKER_PASSWORD }}
        docker push heavygee/hello-dalle-discordbot:latest
        docker push heavygee/hello-dalle-discordbot:$version

    - name: Log Docker push failure
      if: failure()
      run: echo "Docker push failed. Manual intervention may be needed."
